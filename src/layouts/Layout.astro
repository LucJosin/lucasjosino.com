---
import ThemeIcon from '@components/core/ThemeIcon.astro';
import headConfig from '@constants/head';
import '@styles/global.css';

export interface Props {
  title: string;
  description: string;
  banner?: string;
  robots?: string;
  shortlink?: string;
  type?: string;
  locale?: string;
  article?: {
    title: string;
    description: string;
    category: string;
    publishedAt: string;
    updatedAt?: string;
    tags: string[];
  };
}

const { title, description, banner, robots, shortlink, locale, article } =
  Astro.props as Props;
---

<!doctype html>
<html lang={locale || 'en'}>
  <head>
    <!-- Metadata -->
    <meta charset="UTF-8" />
    <meta http-equiv="content-language" content="en-US" />
    <meta http-equiv="content-type" content="text/html" />
    <meta name="copyright" content={headConfig.copyright} />
    <meta
      name="description"
      content={article?.description || description + headConfig.endDescription}
    />
    <meta name="author" content={headConfig.name} />
    <meta name="tags" content={headConfig.tags} />
    <meta name="keywords" content={headConfig.tags} />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="robots" content={robots ?? headConfig.robots} />

    <!-- Twitter -->
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:creator" content={headConfig.social} />
    <meta name="twitter:site" content={headConfig.social} />
    <meta name="twitter:domain" content={Astro.site} />
    <meta
      name="twitter:title"
      content={article?.title || title + ' | ' + headConfig.name}
    />
    <meta
      name="twitter:description"
      property="og:description"
      itemprop="description"
      content={article?.description || description + headConfig.endDescription}
    />
    <meta
      property="twitter:image"
      itemprop="image primaryImageOfPage"
      content={Astro.site + (banner ?? headConfig.banner)}
    />

    <!-- Open Graph -->
    <meta
      property="og:url"
      content={headConfig.canonical + Astro.url.pathname}
    />
    <meta
      property="og:title"
      content={article?.title || title + ' | ' + headConfig.name}
    />
    <meta property="og:site_name" content={headConfig.name} />
    <meta
      property="og:description"
      content={article?.description || description + headConfig.endDescription}
    />
    <meta property="og:type" content={article ? 'article' : 'portfolio'} />
    <meta
      property="og:image"
      content={Astro.site + (banner ?? headConfig.banner)}
    />
    <meta
      property="og:image:secure_url"
      content={Astro.site + (banner ?? headConfig.banner)}
    />
    <meta
      property="og:image:type"
      content=`image/${(banner ?? headConfig.banner).split('.').pop()}`
    />
    <meta property="og:image:width" content="1200" />
    <meta property="og:image:height" content="630" />

    <script is:inline>
      // eslint-disable-next-line @typescript-eslint/no-unused-vars
      function getGiscusTheme(theme) {
        return `${window.location.origin}/static/css/giscus_${theme}.css`;
      }

      const theme = (() => {
        if (
          typeof localStorage !== 'undefined' &&
          localStorage.getItem('theme')
        ) {
          return localStorage.getItem('theme');
        }

        if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
          return 'dark';
        }

        return 'light';
      })();

      document.documentElement.setAttribute('data-theme', theme);
      window.localStorage.setItem('theme', theme);
    </script>

    {
      article && (
        <>
          <meta
            property="article:published_time"
            content={article?.publishedAt}
          />
          <meta property="article:modified_time" content={article?.updatedAt} />
          <meta property="article:author" content={headConfig.name} />
          <meta property="article:section" content={article?.category} />
          <meta property="article:tag" content={article?.tags.join(' ')} />
        </>
      )
    }

    <!-- Links -->
    {
      shortlink && (
        <link
          rel="shortlink"
          type="text/html"
          href={headConfig.shortLink + shortlink}
        />
      )
    }
    <link
      rel="alternative"
      href={headConfig.alternative + Astro.url.pathname}
    />
    <link rel="canonical" href={headConfig.canonical + Astro.url.pathname} />

    <!-- Icons -->
    <link
      rel="apple-touch-icon"
      sizes="180x180"
      href={`${Astro.site}apple-touch-icon.png`}
    />
    <link
      rel="icon"
      type="image/png"
      sizes="32x32"
      href={`${Astro.site}favicon-32x32.png`}
    />
    <link
      rel="icon"
      type="image/png"
      sizes="16x16"
      href={`${Astro.site}favicon-16x16.png`}
    />
    <link
      rel="icon"
      href={`${Astro.site}favicon.ico`}
      media="(prefers-color-scheme:no-preference)"
    />
    <link
      rel="icon"
      href={`${Astro.site}favicon-light.ico`}
      media="(prefers-color-scheme:dark)"
    />
    <link
      rel="icon"
      href={`${Astro.site}favicon.ico`}
      media="(prefers-color-scheme:light)"
    />

    <!-- Astro -->
    <meta name="generator" content={Astro.generator} />

    <!-- Title -->
    <title>{article?.title || title + ' | ' + headConfig.name}</title>
  </head>
  <body>
    <main>
      <ThemeIcon />
      <slot />
    </main>
  </body>
</html>

<style>
  /* Scroll */
  :global(::-webkit-scrollbar) {
    width: 9px;
    background-color: var(--secondary-color);
  }

  :global(::-webkit-scrollbar-thumb) {
    background-color: var(--contrast-color);
    border-radius: var(--border-radius);
  }

  :global([astro-icon]) {
    fill: var(--primary-text-color);
    color: var(--primary-text-color);
    transition: all var(--transition-duration);
  }

  :global(a) {
    color: var(--primary-text-color);
    text-decoration: none;
  }

  :global(p) {
    margin-block-start: 0;
    margin-block-end: 0;
    margin-inline-start: 0;
    margin-inline-end: 0;
  }

  :global(h1) {
    margin-block-start: 0;
    margin-block-end: 0;
    margin-inline-start: 0;
    margin-inline-end: 0;
  }
</style>
