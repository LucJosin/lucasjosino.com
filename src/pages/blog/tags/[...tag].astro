---
import Divider from '@components/core/Divider.astro';
import PostCard from '@components/core/Post/PostCard.astro';
import Title from '@components/core/Title.astro';
import Container from '@components/data/Container.astro';
import Layout from '@layouts/Layout.astro';
import Navigation from '@layouts/Navigation.astro';
import { getAllPosts, getUniqueTags } from '@lib/blog';
import { getFormatedDate } from '@lib/date';
import type { CollectionEntry } from 'astro:content';

export async function getStaticPaths() {
  const allPosts = await getAllPosts();
  const uniqueTags = await getUniqueTags();

  return uniqueTags.map((tag) => {
    const filteredPosts = allPosts.filter((post) =>
      post.data.tags.includes(tag)
    );
    return {
      params: { tag },
      props: { posts: filteredPosts },
    };
  });
}

interface Props {
  posts: CollectionEntry<'blog'>[];
}

const { tag } = Astro.params;
const { posts } = Astro.props;
---

<Layout
  title={'Tag: ' + tag}
  description={`Posts tagged with: ${tag}`}
  shortlink="/blog"
>
  <Container>
    <Navigation
      backTitle="Tags"
      backAlt="Go back to tags page"
      backHref="/blog/tags/"
      showIcon
    />
    <Title title={'Tag: ' + tag} fontSize="2.5em" />
    <Divider height="1px" width="80%" />
    <div class="posts">
      {
        posts.map((post) => {
          return (
            <PostCard
              image={post.data.image}
              title={post.data.title}
              description={post.data.description}
              category={post.data.category}
              href={`${post.slug}/`}
              publishedAt={getFormatedDate(post.data.publishedAt)}
              tags={post.data.tags}
            />
          );
        })
      }
    </div>
  </Container>
</Layout>

<style>
  .posts {
    width: 100%;
    display: flex;
    flex-direction: column;
    gap: 1rem;
  }

  .posts-tags {
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: center;
    gap: 1rem;
  }
</style>
