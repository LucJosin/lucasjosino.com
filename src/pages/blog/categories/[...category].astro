---
import Description from '@components/core/Description.astro';
import Divider from '@components/core/Divider.astro';
import PostCard from '@components/core/Post/PostCard.astro';
import Title from '@components/core/Title.astro';
import Container from '@components/data/Container.astro';
import Layout from '@layouts/Layout.astro';
import { getStaticCategoryPaths } from '@lib/blog';
import { getFormatedDate } from '@lib/date';
import type { CollectionEntry } from 'astro:content';
import { useLocale } from 'i18n';

export const getStaticPaths = getStaticCategoryPaths();

interface Props {
  posts: CollectionEntry<'blog'>[];
}

const { t, localizePath } = useLocale(Astro.url.pathname);

const { category } = Astro.params;
const { posts } = Astro.props;
---

<Layout
  title={t('categories.category.title', { category })}
  description={t('categories.description', { category })}
  shortlink="/blog"
>
  <Container>
    <Title
      title={t('categories.category.title', { category })}
      fontSize="2.5em"
    />
    <Description
      value={t('categories.category.description', {
        count: posts.length,
        category,
      })}
      margin="0"
      width="80%"
    />
    <Divider height="1px" width="80%" />
    <div class="category-posts">
      {
        posts.map((post) => {
          return (
            <PostCard
              image={post.data.image.src}
              title={post.data.title}
              description={post.data.description}
              category={post.data.category}
              href={localizePath(`/blog/${post.data.permSlug}`)}
              publishedAt={getFormatedDate(post.data.publishedAt)}
              tags={post.data.tags}
              body={post.body}
            />
          );
        })
      }
    </div>
  </Container>
</Layout>

<style>
  .category-posts {
    width: 100%;
    display: flex;
    flex-direction: column;
    gap: 1rem;
  }
</style>
