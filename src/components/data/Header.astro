---
import LanguageIcon from '@components/core/LanguageIcon.astro';
import Link from '@components/core/Link/Link.astro';
import Logo from '@components/core/Logo.astro';
import ThemeIcon from '@components/core/ThemeIcon.astro';
import Tooltip from '@components/core/Tooltip.astro';
import { Icon } from 'astro-icon/components';
import { useLocale } from 'i18n';

const { t, localizePath } = useLocale(Astro.url.pathname);
---

<header>
  <div class="header-container">
    <div class="header-left">
      <Tooltip message={t('common.header.homepage_tooltip')} position="bottom">
        <Link
          href={localizePath('/')}
          alt={t('common.header.homepage')}
          hasBorderBottom={false}
          accesskey="h"
          align="center"
        >
          <Logo />
        </Link>
      </Tooltip>
    </div>
    <nav class="header-nav">
      <Link
        title={t('common.header.blog')}
        href={localizePath('/blog/')}
        alt={t('common.header.blog_link_alt')}
      />
      <Link
        title={t('common.header.projects')}
        href={localizePath('/projects/')}
        alt={t('common.header.projects_link_alt')}
      />
      <Link
        title={t('common.header.about')}
        href={localizePath('/about/')}
        alt={t('common.header.about_link_alt')}
      />
      <LanguageIcon />
      <ThemeIcon />
    </nav>
  </div>
  <div class="header-menu-mobile">
    <button class="header-menu-btn">
      <Icon name="mdi:menu" class="header-menu-btn-menu" />
      <Icon name="mdi:close" class="header-menu-btn-close" />
    </button>
  </div>
</header>

<style>
  header {
    height: 3rem;
    width: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    margin-bottom: 3rem;
  }

  .header-container {
    width: 100%;
    display: flex;
    justify-content: space-between;
    padding: 0 1rem;
  }

  .header-title {
    margin: 0;
    transition: color var(--transition-duration) linear;
  }

  .header-title:hover {
    color: var(--description-text-color);
    margin: 0;
  }

  .header-nav,
  .header-left {
    display: flex;
    gap: 1rem;
    align-items: center;
  }

  .header-menu-mobile {
    display: none;
  }

  .header-menu-btn-close,
  .header-menu-btn-menu {
    font-size: 2em;
  }

  .header-menu-btn-close {
    visibility: hidden;
    pointer-events: none;
    display: none;
  }

  .header-menu-btn {
    height: 2rem;
    width: 2rem;
    display: flex;
    justify-content: center;
    align-items: center;
    cursor: pointer;
    margin-right: 1rem;
    border: var(--border-size) solid var(--border-color);
    border-radius: var(--border-radius);
    transition: all var(--transition-duration) linear;
    background-color: transparent;
  }

  @media (max-width: 520px) {
    .header-nav {
      visibility: hidden;
      opacity: 0;
      position: absolute;
      flex-direction: column;
      align-items: center;
      justify-items: center;
      backdrop-filter: blur(2px);
      padding: 1em;
      border-radius: var(--border-radius);
      right: 1rem;
      top: 3rem;
      border: var(--border-size) solid var(--border-color);
      pointer-events: none;
    }

    .header-nav.show {
      visibility: visible;
      opacity: 1;
      transition-delay: 0s;
      pointer-events: all;
    }

    .header-menu-btn-close.show {
      visibility: visible;
      opacity: 1;
      pointer-events: all;
      display: initial;
    }

    .header-menu-btn-menu.show {
      visibility: hidden;
      pointer-events: none;
      display: none;
    }

    .header-menu-mobile {
      display: initial;
      flex-direction: initial;
      position: relative;
    }

    .header-nav-mobile {
      position: absolute;
      display: flex;
      flex-direction: column;
      gap: 1rem;
      background-color: var(--contrast-color);
      color: white;
      right: 1rem;
    }
  }
</style>

<script>
  const headerNav = document.querySelector('.header-nav') as HTMLElement;
  const headerMenuBtn = document.querySelector(
    '.header-menu-btn-menu'
  ) as HTMLElement;
  const headerCloseBtn = document.querySelector(
    '.header-menu-btn-close'
  ) as HTMLElement;
  const headerMenu = document.querySelector('.header-menu-mobile');

  headerMenu?.addEventListener('click', () => {
    headerNav.classList.toggle('show');
    headerMenuBtn.classList.toggle('show');
    headerCloseBtn.classList.toggle('show');
  });
</script>
