---
import { getAllTranslations } from '@lib/blog';
import { extractLocaleAndSlug, useLocale } from 'i18n';
import Tooltip from './Tooltip.astro';

const { locale, slug, t, switchLocale } = useLocale(Astro.url.pathname);

const nextLocale = locale === 'en' ? 'pt' : 'en';

const pages = await Astro.glob('pages/**/*.astro');

// Verify if the page exists in the next locale
const normalPaths = pages
  .map((page) => extractLocaleAndSlug(page!.url!))
  .filter(
    (item) =>
      (slug === item.slug ||
        `${item.slug}/` === slug ||
        `${slug}/` === item.slug) &&
      item.locale === nextLocale
  );

// Verify if the dynamic page exists in the next locale
const dynamicPaths = (
  await getAllTranslations(slug.split('/').filter(Boolean).pop() ?? '', locale)
).map((t) => t.data.language);

const enabled = normalPaths.length > 0 || dynamicPaths.length > 0;
---

<Tooltip
  message={enabled
    ? t.common.header.change_language_alt
    : t.common.header.change_language_alt_disabled}
  position="bottom"
>
  <a
    href={switchLocale(nextLocale)}
    class:list={['header-language-btn', !enabled && 'disabled']}
    accesskey={enabled ? 'l' : null}
  >
    <span
      class:list={[
        'header-language-option',
        locale === 'en' && 'header-language-selected',
      ]}>ðŸ‡ºðŸ‡¸</span
    >
    <span
      class:list={[
        'header-language-option',
        locale === 'pt' && 'header-language-selected',
      ]}>ðŸ‡§ðŸ‡·</span
    >
  </a>
</Tooltip>

<style>
  .header-language-btn {
    height: 2rem;
    width: 2rem;
    border: var(--border-size) solid var(--border-color);
    border-radius: var(--border-radius);
    display: flex;
    align-items: center;
    justify-content: center;
    transition: all var(--transition-duration);
    gap: 0.5rem;
    font-size: 0.8em;
  }

  .header-language-btn:hover {
    border: var(--border-size) solid var(--primary-color);
    background-color: var(--border-color);
    color: var(--primary-color);
    cursor: pointer;
  }

  .header-language-selected {
    display: none;
  }

  .disabled {
    border: var(--border-size) solid gray;
    border-radius: var(--border-radius);
    pointer-events: none;
  }

  .disabled:hover {
    background-color: gray;
  }
</style>
