---
import Tags from '@components/data/Tags.astro';
import { getReadTime } from '@lib/time';
import { useLocale } from 'i18n';
import Description from '../Description.astro';
import Link from '../Link/Link.astro';
import PostDateTime from './PostDateTime.astro';

interface Props {
  image?: string;
  category: string;
  body: string;
  publishedAt: string;
  title: string;
  description: string;
  tags: string[];
  href: string;
  maxTags?: number;
}

const { t, interpolate, localizePath } = useLocale(Astro.url.pathname);

const {
  image,
  category,
  body,
  publishedAt,
  title,
  description,
  tags,
  href,
  maxTags = 5,
} = Astro.props;
---

<div class="post-card">
  <div class="post-card-img-container">
    {
      image && (
        <a href={href} title={t.blog.post_card.read_post}>
          <img src={image} alt={`Post - ${title}`} class="post-card-img" />
        </a>
      )
    }
  </div>
  <div class="post-card-container">
    <div class="post-card-info">
      <span class="post-card-info-left">
        <PostDateTime date={publishedAt} /> •
        <Link
          title={category}
          alt={interpolate(t.blog.post_card.read_all_post_with_this_category, {
            name: 'category',
          })}
          href={localizePath(`/blog/categories/${category}`)}
        /> •
        <span>{getReadTime(body)}</span>
      </span>
    </div>
    <div class="post-card-header">
      <Link href={href} alt={t.blog.post_card.read_post} display="inline">
        <h3>{title}</h3>
      </Link>
    </div>
    <Description
      value={description}
      margin="0"
      align={false}
      maxLine="3"
      title={description}
    />
    <Tags values={tags.slice(0, maxTags)} target="tags" active />
    <div class="post-card-read-more">
      <Link
        href={href}
        alt={t.blog.post_card.read_post}
        title={t.blog.post_card.read_post}
        icon="mdi:arrow-right-thin"
        iconSide="right"
        hasBorderBottom={false}
        animatedIcon
        reverseAnimation
      />
    </div>
  </div>
</div>

<style>
  .post-card {
    min-height: 15rem;
    width: 100%;
    border: var(--border-size) solid var(--border-color);
    border-radius: var(--border-radius);
    padding: var(--card-padding);
    transition: all var(--transition-duration);
    display: flex;
    gap: 1rem;
  }

  .post-card:hover {
    background-color: var(--secondary-color);
  }

  h3 {
    margin: 0;
    display: inherit;
  }

  .post-card-img-container {
    width: 50%;
    max-width: 50%;
    min-width: 50%;
    overflow: hidden;
    border-radius: var(--border-radius);
  }

  .post-card-img {
    height: 100%;
    width: 100%;
    object-fit: cover;
    border-radius: inherit;
    transition: scale var(--transition-duration);
  }

  .post-card:hover .post-card-img {
    scale: 1.03;
  }

  .post-card-container {
    width: 50%;
    display: flex;
    flex-direction: column;
    gap: 0.8rem;
    position: relative;
  }

  .post-card-info {
    margin-top: 0.5rem;
    font-size: 0.85em;
    display: flex;
    align-items: center;
    justify-content: space-between;
  }

  .post-card-info-left {
    display: flex;
    gap: 0.4rem;
  }

  .post-card-read-more {
    display: flex;
    align-items: center;
    position: absolute;
    bottom: 0rem;
  }

  @media (max-width: 768px) {
    .post-card {
      flex-direction: column;
    }

    .post-card-img-container {
      width: 100%;
      max-width: initial;
      min-width: initial;
    }

    .post-card-container {
      width: 100%;
    }

    .post-card-info {
      margin-top: 0;
    }

    .post-card-read-more {
      position: initial;
    }
  }
</style>
