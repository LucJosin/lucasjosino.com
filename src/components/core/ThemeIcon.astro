---
import { Icon } from 'astro-icon/components';

interface Props {
  position?: string;
}

const { position = 'initial' } = Astro.props;
---

<button id="theme" accesskey="t" title="(Alt + T)">
  <Icon name="mdi:white-balance-sunny" class="dark" />
  <Icon name="mdi:moon-and-stars" class="light" />
</button>

<style define:vars={{ position }}>
  #theme {
    height: 2rem;
    width: 2rem;
    display: flex;
    justify-content: center;
    align-items: center;
    cursor: pointer;
    z-index: 10;
    top: 1.5rem;
    right: 1.5rem;
    border: var(--border-size) solid var(--border-color);
    border-radius: var(--border-radius);
    transition: all var(--transition-duration) linear;
    background-color: transparent;
    position: var(--position);
  }

  #theme:hover {
    background-color: var(--contrast-color);
  }

  :root[data-theme='dark'] .light {
    display: none;
  }

  :root[data-theme='light'] .dark {
    display: none;
  }

  #theme:hover > [data-icon] {
    color: var(--primary-color);
    fill: var(--primary-color);
  }
</style>

<script is:inline>
  function sendMessage(message) {
    const giscusFrame = document.querySelector('iframe.giscus-frame');
    if (!giscusFrame) return;
    giscusFrame.contentWindow.postMessage(
      { giscus: message },
      'https://giscus.app'
    );
  }

  const html = document.documentElement;
  document.getElementById('theme').addEventListener('click', () => {
    const theme =
      html.getAttribute('data-theme') === 'light' ? 'dark' : 'light';

    localStorage.setItem('theme', theme);

    // Update 'data-theme'
    html.setAttribute('data-theme', theme);

    // Update giscus
    sendMessage({
      setConfig: {
        theme: getGiscusTheme(theme),
      },
    });
  });
</script>
