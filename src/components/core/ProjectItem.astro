---
import type { ProjectModel } from '@constants/projects';
import Icon from 'astro-icon';
import Description from './Description.astro';
import Divider from './Divider.astro';
import LinkBox from './LinkBox.astro';
import MiniProjectItem from './MiniProjectItem.astro';
import Title from './Title.astro';

interface Props {
  project: ProjectModel;
  titleSize?: string;
  descSize?: string;
}

const { project, titleSize, descSize } = Astro.props as Props;
---

<div class="project-item">
  {
    project.image && (
      <img src={project.image} class="banner" title={`${project.title}`} />
    )
  }
  <div class="item-header">
    <Title title={project.title} fontSize={titleSize} margin="0" />
    <span class="language">
      {project.language}
      <Icon
        name={`simple-icons:${project.language.toLocaleLowerCase()}`}
        width="16"
      />
    </span>
  </div>
  <Divider width="100%" margin="0 0" />
  <Description
    value={project.description}
    fontSize={descSize}
    margin="0"
    align={false}
  />
  <div class="tags">
    {
      project.tags.map((item) => {
        return <span>{item}</span>;
      })
    }
  </div>
  <div class="item-links">
    {
      project.git && (
        <LinkBox
          link={project.git}
          icon="simple-icons:github"
          title="Github"
          alt={`${project.title} - Github`}
          isLocal={false}
        />
      )
    }
    {
      project.url && (
        <LinkBox
          link={project.url}
          icon="mdi:open-in-new"
          title="Demo"
          alt={`${project.title} - Demo`}
          isLocal={false}
        />
      )
    }
  </div>
  {
    project.children && (
      <details class="details">
        <summary>More from this project</summary>
        <div class="children">
          {project.children.map((item) => (
            <MiniProjectItem
              title={item.title}
              description={item.description}
              git={item.git}
              url={item.url}
            />
          ))}
        </div>
      </details>
    )
  }
</div>

<style>
  .project-item {
    border: var(--border-size) solid var(--border-color);
    border-radius: var(--border-radius);
    box-sizing: border-box;
    padding: 1rem;
    transition: all var(--transition-duration);
    display: flex;
    flex-direction: column;
    gap: 1rem;
  }

  .banner {
    max-height: 12rem;
    width: 100%;
    object-fit: cover;
    border-radius: var(--border-radius);
  }

  .item-header {
    display: flex;
    align-items: center;
    justify-content: space-between;
  }

  .language {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    font-size: 0.8em;
  }

  .item-links {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(5rem, 1fr));
    gap: 0.5rem;
  }

  .tags {
    width: 100%;
    display: flex;
    flex-wrap: wrap;
    flex-direction: row;
    gap: 0.5rem;
    font-size: 0.9em;
  }

  .tags > span {
    padding: 0.4rem;
    border-radius: var(--border-radius);
    border: var(--border-size) solid var(--border-color);
    transition: all 0.2s;
    white-space: nowrap;
  }

  .tags > span:hover {
    border: var(--border-size) solid var(--primary-color);
    background-color: var(--border-color);
    color: var(--primary-color);
    cursor: pointer;
  }

  .details > summary {
    cursor: pointer;
  }

  .children {
    margin-top: 1rem;
    display: grid;
    width: 100%;
    gap: 1rem;
    grid-template-columns: repeat(auto-fit, minmax(12rem, 1fr));
  }
</style>
