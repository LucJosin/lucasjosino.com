---
import Tags from '@components/data/Tags.astro';
import type { ProjectModel } from '@constants/projects';
import { Icon } from 'astro-icon/components';
import { createLocale } from 'i18n';
import Description from '../Description.astro';
import Divider from '../Divider.astro';
import LinkBox from '../Link/LinkBox.astro';
import Title from '../Title.astro';
import MiniProjectCard from './MiniProjectCard.astro';

interface Props {
  project: ProjectModel;
  titleSize?: string;
  descSize?: string;
}

const { locale, t } = createLocale(Astro.url.pathname);

const { project, titleSize, descSize } = Astro.props as Props;
---

<div class="project-card">
  <div class="project-card-wrapper">
    <div class="project-card-img-container">
      {
        project.thumbnail && (
          <img
            src={project.thumbnail}
            class="project-card-img"
            title={`${project.title}`}
          />
        )
      }
    </div>

    <div class="project-card-container">
      <div class="project-card-header">
        <div class="project-card-title">
          <Title title={project.title} fontSize={titleSize} margin="0" />
          <span
            class="project-card-status"
            title={project.status.description[locale]}
            >{project.status.name[locale]}</span
          >
          {
            project.category === 'Org' && (
              <a
                href={project.org}
                class="project-card-org"
                title={t.projects.org_alt}
                rel="noopener noreferrer"
                target="_blank"
              >
                {t.projects.org}
                <Icon name="mdi:external-link" />
              </a>
            )
          }
        </div>
        <div class="project-card-language">
          {project.language}
          <Icon name={project.icon} />
        </div>
      </div>
      <Divider width="100%" margin="0 0" />
      <Description
        value={project.description[locale]}
        title={project.description[locale]}
        fontSize={descSize}
        margin="0"
        align={false}
        maxLine="3"
      />
      <div class="project-card-bottom">
        <Tags values={project.tags} target="tags" />
        <div class="project-card-links">
          {
            project.git && (
              <LinkBox
                href={project.git}
                icon="simple-icons:github"
                title="Github"
                alt={`${project.title} - Github`}
                isLocal={false}
                padding="0.5rem"
              />
            )
          }
          {
            project.url && (
              <LinkBox
                href={project.url}
                icon="mdi:open-in-new"
                title="Demo"
                alt={`${project.title} - Demo`}
                isLocal={false}
                padding="0.5rem"
              />
            )
          }
          {
            project.article && (
              <LinkBox
                href={project.article[locale]}
                icon="ic:outline-article"
                title="Read"
                alt={`${project.title} - Blog post`}
                isLocal={true}
                padding="0.5rem"
              />
            )
          }
        </div>
      </div>
    </div>
  </div>

  {
    project.subProjects && (
      <div class="project-card-sub-projects-wrapper">
        <h3>{t.projects.repositories}</h3>
        <div class="project-card-sub-projects">
          {project.subProjects.map((sub) => {
            return (
              <MiniProjectCard
                title={sub.title}
                description={sub.description[locale]}
                url={sub.url}
                git={sub.git}
                language={sub.language}
                icon={sub.icon}
              />
            );
          })}
        </div>
      </div>
    )
  }
</div>

<style>
  .project-card {
    border: var(--border-size) solid var(--border-color);
    border-radius: var(--border-radius);
  }

  .project-card-wrapper {
    height: 100%;
    width: 100%;
    min-height: 15rem;
    box-sizing: border-box;
    padding: var(--card-padding);
    transition: all var(--transition-duration);
    display: flex;
    gap: 1rem;
  }

  .project-card-sub-projects-wrapper {
    display: flex;
    flex-direction: column;
    padding: 0 var(--card-padding) var(--card-padding) var(--card-padding);
    gap: 1rem;
  }

  .project-card-sub-projects-wrapper h3 {
    margin: 0;
  }

  .project-card-sub-projects {
    width: 100%;
    display: flex;
    gap: 1rem;
  }

  .project-card:hover {
    background-color: var(--secondary-color);
  }

  .project-card-img-container {
    width: 50%;
    max-width: 50%;
    min-width: 50%;
    display: flex;
    wrap: nowrap;
    overflow: hidden;
  }

  .project-card-img {
    height: 100%;
    width: 100%;
    object-fit: cover;
    border-radius: var(--border-radius);
    transition: all 2.5s ease;
  }

  .project-card-container {
    width: 50%;
    display: flex;
    flex-direction: column;
    gap: 0.8rem;
    position: relative;
  }

  .project-card-header {
    margin-top: 0.5rem;
    display: flex;
    align-items: center;
    justify-content: space-between;
  }

  .project-card-bottom {
    width: 100%;
    display: flex;
    flex-direction: column;
    gap: inherit;
    position: absolute;
    bottom: 0;
  }

  .project-card-title {
    display: flex;
    align-items: center;
  }

  .project-card-status,
  .project-card-org {
    margin: 0 0 0 0.5rem;
    font-size: 0.8em;
    border: var(--border-size) solid var(--border-color);
    padding: 0.4rem;
    border-radius: var(--border-radius);
    transition: all 0.2s;
    display: flex;
    gap: 0.2rem;
    align-items: center;
  }

  .project-card-org:hover {
    border: var(--border-size) solid var(--primary-color);
    background-color: var(--border-color);
    color: var(--primary-color);
    cursor: pointer;
  }

  .project-card-language {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    font-size: 0.8em;
  }

  .project-card-links {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(5rem, 1fr));
    gap: 0.5rem;
  }

  .project-card-details > summary {
    cursor: pointer;
  }

  .project-card-children {
    margin-top: 1rem;
    display: grid;
    width: 100%;
    gap: 1rem;
    grid-template-columns: repeat(auto-fit, minmax(12rem, 1fr));
  }

  [data-icon] {
    font-size: 1.3em;
  }

  .project-card-org > [data-icon] {
    font-size: 1em;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .project-card-org:hover > [data-icon] {
    color: var(--primary-color);
    fill: var(--primary-color);
  }

  @media (max-width: 768px) {
    .project-card-img-container {
      width: 100%;
      max-width: initial;
      min-width: initial;
    }

    .project-card-container {
      width: 100%;
    }

    .project-card-wrapper {
      flex-direction: column;
    }

    .project-card-bottom {
      position: initial;
    }

    .project-card-sub-projects {
      flex-direction: column;
    }
  }
</style>
